<?php

/**
 * @file
 * Custom hooks and functions for module.
 */

use Drupal\training\Event\TrainingPreprocessEvent;

/**
 * Implements hook_theme().
 */
function training_theme($existing, $type, $theme, $path) {
  return [
    'training_theme_first' => [
      'variables' => [],
    ],
    'training_theme_second' => [
      'variables' => [
        'list_type' => 'ul',
        'items' => NULL,
      ],
      'file' => 'training.theme.inc',
    ],
  ];
}

/**
 * Implements template_preprocess_HOOK().
 * Processing handler for the first theme example.
 */
function template_preprocess_training_theme_first(&$variables) {
  $date_formatter = \Drupal::service('date.formatter');
  $variables['date'] = $date_formatter->format(time());
}

/**
 * Implements hook_preprocess_HOOK().
 */
function training_preprocess_html(&$variables) {
    /** @var \Drupal\Component\EventDispatcher\ContainerAwareEventDispatcher $dispatcher */
    $dispatcher = \Drupal::service('event_dispatcher');
    // Create event object passing arguments.
    $event = new TrainingPreprocessEvent($variables);
    // Call it.
    $dispatcher->dispatch($event, TrainingPreprocessEvent::PREPROCESS_HTML);
  }